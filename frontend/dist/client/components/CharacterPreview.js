import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
export default function CharacterPreview({ character, className }) {
    const [expandedSection, setExpandedSection] = useState(null);
    const toggleSection = (section) => {
        if (expandedSection === section) {
            setExpandedSection(null);
        }
        else {
            setExpandedSection(section);
        }
    };
    return (_jsxs("div", { className: `space-y-4 ${className}`, children: [_jsx("h2", { className: "text-xl font-semibold mb-4", children: "Character Preview" }), _jsxs("div", { className: "border rounded-lg overflow-hidden", children: [_jsxs("div", { className: "bg-purple-100 px-4 py-3 border-b", children: [_jsx("h3", { className: "text-lg font-semibold", children: character.name }), _jsx("p", { className: "text-sm text-gray-600", children: character.title })] }), _jsxs("div", { className: "divide-y", children: [_jsxs("div", { children: [_jsxs("button", { className: "flex justify-between items-center w-full px-4 py-3 text-left hover:bg-gray-50", onClick: () => toggleSection('persona'), children: [_jsx("span", { className: "font-medium", children: "Persona" }), _jsx("span", { children: expandedSection === 'persona' ? '−' : '+' })] }), expandedSection === 'persona' && (_jsx("div", { className: "px-4 py-3 bg-gray-50", children: _jsx("p", { className: "whitespace-pre-line", children: character.persona }) }))] }), _jsxs("div", { children: [_jsxs("button", { className: "flex justify-between items-center w-full px-4 py-3 text-left hover:bg-gray-50", onClick: () => toggleSection('greeting'), children: [_jsx("span", { className: "font-medium", children: "Greeting" }), _jsx("span", { children: expandedSection === 'greeting' ? '−' : '+' })] }), expandedSection === 'greeting' && (_jsx("div", { className: "px-4 py-3 bg-gray-50", children: _jsx("p", { className: "whitespace-pre-line", children: character.greeting }) }))] }), _jsxs("div", { children: [_jsxs("button", { className: "flex justify-between items-center w-full px-4 py-3 text-left hover:bg-gray-50", onClick: () => toggleSection('scenario'), children: [_jsx("span", { className: "font-medium", children: "Scenario" }), _jsx("span", { children: expandedSection === 'scenario' ? '−' : '+' })] }), expandedSection === 'scenario' && (_jsx("div", { className: "px-4 py-3 bg-gray-50", children: _jsx("p", { className: "whitespace-pre-line", children: character.scenario }) }))] }), _jsxs("div", { children: [_jsxs("button", { className: "flex justify-between items-center w-full px-4 py-3 text-left hover:bg-gray-50", onClick: () => toggleSection('conversation'), children: [_jsx("span", { className: "font-medium", children: "Example Conversation" }), _jsx("span", { children: expandedSection === 'conversation' ? '−' : '+' })] }), expandedSection === 'conversation' && (_jsx("div", { className: "px-4 py-3 bg-gray-50", children: Array.isArray(character.exampleConversation) ? (character.exampleConversation.map((entry, index) => (_jsxs("div", { className: "border p-2 rounded mb-2", children: [_jsxs("p", { children: [_jsx("strong", { children: "You:" }), " ", entry.user] }), _jsxs("p", { children: [_jsxs("strong", { children: [character.name, ":"] }), " ", entry.character] })] }, index)))) : (_jsx("p", { className: "text-red-500", children: "Invalid conversation format" })) }))] })] })] })] }));
}
